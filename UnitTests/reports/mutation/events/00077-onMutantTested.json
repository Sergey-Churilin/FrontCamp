{"sourceFilePath":"D:\\Mavric\\FrontCamp\\FrontCamp\\UnitTests\\src\\Factories\\requestFactory.js","mutatorName":"BlockStatement","status":1,"replacement":"{\n}","location":{"start":{"line":1,"column":35},"end":{"line":38,"column":1}},"range":[35,1022],"testsRan":["AddArticleComponent tests $location.path has to be called","HomeController tests todoFactory.getTasks has to be called","HomeController tests should retrieve the correct items","PaginationComponent tests setPage has to be called","PaginationComponent tests PaginationFactory getPager has to be called","PaginationComponent tests updateView has not been called","TodoComponent tests $location.path has to be called","TodoComponent tests viewDeleted has to be called","addTodoController tests todoFactory.addTask has to be called","editController tests todoFactory.save has to be called","Pagination factory tests paginationFactory should exist","Pagination factory tests paginationFactory getPager totalItems should be 26","Pagination factory tests paginationFactory getPager current should be 2","Pagination factory tests paginationFactory getPager pageSize should be 10","Pagination factory tests paginationFactory getPager pageSize should be 5","Pagination factory tests paginationFactory getPager totalPages should be 6","Pagination factory tests paginationFactory getPager totalPages should be 3","Pagination factory tests paginationFactory getPager startIndex should be 90","Pagination factory tests paginationFactory getPager endIndex should be 99","Pagination factory tests paginationFactory getPager startPage should be 1 and endPage should be 10","Pagination factory tests paginationFactory getPager startPage should be 1 and endPage should be 10","Todo factory tests todoFactory and requestFactory should exist","Todo factory tests request factory getTasks has to be called","Todo factory tests todoFactory should return list of tasks","Todo factory tests request factory getTaskById has to be called","Todo factory tests todoFactory getTaskById should return correct todo","Todo factory tests request factory addTask has to be called","Todo factory tests todoFactory removeTask callback has to be called","Todo factory tests save"],"originalLines":"function requestFactory($resource) {\r\n    var baseUrl = \"http://localhost:3000/todos\";\r\n    var Todos = $resource(baseUrl + \"/:id\", {id: '@id'}, {\r\n        update: {method: 'PUT'},\r\n        getTaskById:{method: 'GET'}\r\n    });\r\n\r\n    return {\r\n        addTask: function (todo) {\r\n            Todos.save(todo);\r\n        },\r\n\r\n        getTasks: function () {\r\n            return Todos.query();\r\n        },\r\n\r\n        updateTask: function (todo, callback) {\r\n            Todos.update({id: todo.id}, todo)\r\n                .$promise.then(function(){\r\n                if(callback){\r\n                    callback();\r\n                }\r\n            })\r\n        },\r\n\r\n        removeTask: function (todo, callback) {\r\n            Todos.delete({id: todo.id})\r\n                .$promise.then(function(){\r\n                    if(callback){\r\n                        callback();\r\n                    }\r\n            });\r\n        },\r\n        getTaskById: function(id){\r\n            return Todos.getTaskById({id: id});\r\n        }\r\n    }\r\n}","mutatedLines":"function requestFactory($resource) {\n}"}